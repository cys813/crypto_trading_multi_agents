# Production Configuration for Data Collection Agent
# This configuration is optimized for production environments with high performance and security

# Application settings
app:
  name: "data_collection_agent"
  version: "1.0.0"
  debug: false
  host: "0.0.0.0"
  port: 8000
  environment: "production"

# Database configurations
database:
  timescaledb:
    host: "${TIMESCALEDB_HOST}"
    port: ${TIMESCALEDB_PORT}
    database: "${TIMESCALEDB_DATABASE}"
    username: "${TIMESCALEDB_USER}"
    password: "${TIMESCALEDB_PASSWORD}"
    pool_size: 50
    max_overflow: 20
    connect_timeout: 30
    command_timeout: 60

  postgresql:
    host: "${POSTGRES_HOST}"
    port: ${POSTGRES_PORT}
    database: "${POSTGRES_DATABASE}"
    username: "${POSTGRES_USER}"
    password: "${POSTGRES_PASSWORD}"
    pool_size: 30
    max_overflow: 10
    connect_timeout: 30
    command_timeout: 45

  redis:
    host: "${REDIS_HOST}"
    port: ${REDIS_PORT}
    database: ${REDIS_DB}
    username: "${REDIS_USER}"
    password: "${REDIS_PASSWORD}"
    pool_size: 100
    max_overflow: 50
    connect_timeout: 10

# Exchange configurations
exchanges:
  binance:
    enabled: true
    sandbox: false
    api_key: "${BINANCE_API_KEY}"
    api_secret: "${BINANCE_API_SECRET}"
    rate_limit: 100
    timeout: 15000
    enable_rate_limit: true
    options:
      defaultType: "spot"
      adjustForTimeDifference: true

  okx:
    enabled: true
    sandbox: false
    api_key: "${OKX_API_KEY}"
    api_secret: "${OKX_API_SECRET}"
    passphrase: "${OKX_PASSPHRASE}"
    rate_limit: 20
    timeout: 15000
    enable_rate_limit: true
    options:
      defaultType: "spot"

  huobi:
    enabled: true
    sandbox: false
    api_key: "${HUOBI_API_KEY}"
    api_secret: "${HUOBI_API_SECRET}"
    rate_limit: 100
    timeout: 15000
    enable_rate_limit: true
    options:
      defaultType: "spot"

# Monitoring configuration
monitoring:
  prometheus_enabled: true
  prometheus_port: 9090
  prometheus_path: "/metrics"
  grafana_enabled: true
  grafana_host: "${GRAFANA_HOST}"
  grafana_port: ${GRAFANA_PORT}

# Logging configuration
logging:
  level: "INFO"
  format: "json"
  output: ["file", "remote"]
  file_path: "/var/log/data_collection/production.log"
  max_file_size: "500MB"
  backup_count: 30
  structured_logging: true

# Data collection configuration
collector:
  market_data_enabled: true
  positions_enabled: true
  orders_enabled: true
  symbols: ["BTC/USDT", "ETH/USDT", "BNB/USDT", "SOL/USDT", "ADA/USDT", "DOT/USDT"]
  timeframes: ["1m", "5m", "15m", "30m", "1h", "4h", "1d"]
  sync_interval: 1
  order_book_depth: 50
  trade_limit: 5000

# Performance settings
max_concurrent_connections: 2000
request_timeout: 60
cache_ttl: 300

# Quality control
data_quality_threshold: 0.999
max_retries: 3
retry_delay: 2000